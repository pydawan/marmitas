package br.com.saborgoiano.marmitas.model;

import jedi.db.models.CharField;
import jedi.db.models.ForeignKeyField;
import jedi.db.models.Manager;
import jedi.db.models.Model;
import jedi.db.models.QuerySet;
import jedi.db.models.TextField;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import lombok.extern.log4j.Log4j;

/**
 * <p>
 * Representa um grupo alimentar a ser cadastrado no sistema.
 * </p>
 * 
 * @author thiago-amm
 * @version v1.0.0 22/08/2018
 * @since v1.0.0
 */
@Getter
@Setter
@Accessors(fluent = true, chain = true)
@NoArgsConstructor
@AllArgsConstructor
@RequiredArgsConstructor
@ToString(includeFieldNames = true)
@SuppressWarnings("unused")
@Log4j
public class GrupoAlimento extends Model {
   
   private static final long serialVersionUID = 1L;
   
   @NonNull
   @CharField(max_length = 255, unique = true)
   private String nome;
   
   @ForeignKeyField(required = false)
   private GrupoAlimento grupoPai;
   
   @TextField(required = false)
   private String descricao;
   
   @CharField(max_length = 7, default_value = "ATIVO")
   private String situacaoCadastro;
   
   public static Manager objects = new Manager(GrupoAlimento.class);
   
   public static GrupoAlimento of(String nome, GrupoAlimento grupoPai, String descricao, String situacaoCadastro) {
      return new GrupoAlimento().nome(nome).grupoPai(grupoPai).descricao(descricao)
            .situacaoCadastro(SituacaoCadastro.get(situacaoCadastro).getValor());
   }
   
   public static GrupoAlimento of(String nome, GrupoAlimento grupoPai, String descricao) {
      return new GrupoAlimento().nome(nome).grupoPai(grupoPai).descricao(descricao)
            .situacaoCadastro(SituacaoCadastro.ATIVO.valor());
   }
   
   public static GrupoAlimento of(String nome, GrupoAlimento grupoPai) {
      return new GrupoAlimento(nome, grupoPai, "", SituacaoCadastro.ATIVO.valor());
   }
   
   public static GrupoAlimento of(String nome) {
      return new GrupoAlimento(nome);
   }
   
   public static GrupoAlimento of() {
      return new GrupoAlimento();
   }
   
   public String getNome() {
      return nome;
   }
   
   public void setNome(String nome) {
      this.nome = nome;
   }
   
   public GrupoAlimento getGrupoPai() {
      return grupoPai;
   }
   
   public void setGrupoPai(GrupoAlimento grupoPai) {
      this.grupoPai = grupoPai;
   }
   
   public String getDescricao() {
      return descricao;
   }
   
   public void setDescricao(String descricao) {
      this.descricao = descricao;
   }
   
   public String getSituacaoCadastro() {
      return situacaoCadastro;
   }
   
   public void setSituacaoCadastro(String situacaoCadastro) {
      this.situacaoCadastro = situacaoCadastro;
   }
   
   // Generated by Jedi ORM
   public QuerySet<GrupoAlimento> getGrupoAlimentoSet() {
      return GrupoAlimento.objects.getSet(GrupoAlimento.class, this.id);
   }
   
   // Generated by Jedi ORM
   public QuerySet<Produto> getAlimentoSet() {
      return Produto.objects.getSet(GrupoAlimento.class, this.id);
   }
   
}
