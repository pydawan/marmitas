package br.com.saborgoiano.marmitas.model;

import jedi.db.models.CharField;
import jedi.db.models.Manager;
import jedi.db.models.Model;
import jedi.db.models.QuerySet;
import jedi.db.models.TextField;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;

/**
 * @author thiago-amm
 * @version v1.0.0 22/08/2018
 * @since v1.0.0
 */
@Getter
@Setter
@Accessors(fluent = true, chain = true)
@NoArgsConstructor
@AllArgsConstructor
@RequiredArgsConstructor
@ToString(includeFieldNames = true)
public class Cliente extends Model {
   
   private static final long serialVersionUID = 1L;
   
   @NonNull
   @CharField(max_length = 255, unique = true)
   private String nome;
   
   @CharField(max_length = 13, required = false)
   private String telefoneFixo;
   
   @CharField(max_length = 14, required = false)
   private String telefoneMovel;
   
   @NonNull
   @CharField(max_length = 255, default_value = "")
   private String logradouro;
   
   @TextField(required = false)
   private String complemento;
   
   @NonNull
   @CharField(max_length = 255, default_value = "")
   private String bairro;
   
   @NonNull
   @CharField(max_length = 255, default_value = "")
   private String localidade;
   
   @NonNull
   @CharField(max_length = 2, default_value = "")
   private String uf;
   
   @CharField(max_length = 255, required = false)
   private String cep;
   
   @CharField(max_length = 7, default_value = "ATIVO")
   private String situacaoCadastro;
   
   public static Manager objects = new Manager(Cliente.class);
   
   public static Cliente of(String nome, String telefoneFixo, String telefoneMovel, String logradouro,
         String complemento, String bairro, String localidade, String uf, String cep, String situacaoCadastro) {
      return new Cliente(nome, telefoneFixo, telefoneMovel, logradouro, complemento, bairro, localidade, uf, cep,
            SituacaoCadastro.get(situacaoCadastro).valor());
   }
   
   public static Cliente of(String nome, String logradouro, String bairro, String localidade, String uf) {
      return new Cliente(nome, "", "", logradouro, "", bairro, localidade, uf, "", SituacaoCadastro.ATIVO.valor());
   }
   
   public static Cliente of(String nome) {
      return new Cliente(nome, "", "", "", "");
   }
   
   public static Cliente of() {
      return new Cliente();
   }
   
   public String getNome() {
      return nome;
   }
   
   public void setNome(String nome) {
      this.nome = nome;
   }
   
   public String getTelefoneFixo() {
      return telefoneFixo;
   }
   
   public void setTelefoneFixo(String telefoneFixo) {
      this.telefoneFixo = telefoneFixo;
   }
   
   public String getTelefoneMovel() {
      return telefoneMovel;
   }
   
   public void setTelefoneMovel(String telefoneMovel) {
      this.telefoneMovel = telefoneMovel;
   }
   
   public String getLogradouro() {
      return logradouro;
   }
   
   public void setLogradouro(String logradouro) {
      this.logradouro = logradouro;
   }
   
   public String getComplemento() {
      return complemento;
   }
   
   public void setComplemento(String complemento) {
      this.complemento = complemento;
   }
   
   public String getBairro() {
      return bairro;
   }
   
   public void setBairro(String bairro) {
      this.bairro = bairro;
   }
   
   public String getLocalidade() {
      return localidade;
   }
   
   public void setLocalidade(String localidade) {
      this.localidade = localidade;
   }
   
   public String getUf() {
      return uf;
   }
   
   public void setUf(String uf) {
      this.uf = uf;
   }
   
   public String getCep() {
      return cep;
   }
   
   public void setCep(String cep) {
      this.cep = cep;
   }
   
   public String getSituacaoCadastro() {
      return situacaoCadastro;
   }
   
   public void setSituacaoCadastro(String situacaoCadastro) {
      this.situacaoCadastro = situacaoCadastro;
   }
   
   // Generated by Jedi ORM
   public QuerySet<Pedido> getPedidoSet() {
      return Pedido.objects.getSet(Cliente.class, this.id);
   }
   
}
